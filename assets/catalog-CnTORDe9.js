(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function r(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(n){if(n.ep)return;n.ep=!0;const o=r(n);fetch(n.href,o)}})();const m="2609725f661288e9b08bc0d62455b671",f="https://api.themoviedb.org/3";async function _(e=1){return await(await fetch(`${f}/movie/popular?api_key=${m}&page=${e}`)).json()}async function S(){return await(await fetch(`${f}/trending/movie/day?api_key=${m}`)).json()}async function x(){return await(await fetch(`${f}/trending/movie/week?api_key=${m}`)).json()}async function C(){return await(await fetch(`${f}/movie/upcoming?api_key=${m}`)).json()}async function E(e,t=""){return await(await fetch(`${f}/search/movie?api_key=${m}&query=${encodeURIComponent(e)}&year=${t}`)).json()}async function $(){return await(await fetch(`${f}/genre/movie/list?api_key=${m}`)).json()}let y=null;async function k(){if(y)return y;const e=await $();return y={},e.genres&&Array.isArray(e.genres)&&e.genres.forEach(t=>{y[t.id]=t.name}),y}function L(){const e=localStorage.getItem("library");return e?JSON.parse(e):[]}function A(e){localStorage.setItem("library",JSON.stringify(e))}function q(e,t){let r=L();const i=e.id;r.includes(i)?(r=r.filter(n=>n!==i),t.textContent="Add to library",t.classList.remove("removed")):(r.push(i),t.textContent="Remove from my library",t.classList.add("removed")),A(r)}function M(e,t){L().includes(e.id)?(t.textContent="Remove from my library",t.classList.add("removed")):(t.textContent="Add to library",t.classList.remove("removed"))}async function B(e){let t=document.querySelector("#popup-template");if(!t){fetch("../../partials/popup.html").then(i=>i.text()).then(async i=>{const n=document.createElement("div");n.innerHTML=i;const o=n.querySelector(".movie-popup-overlay");o.id="popup-template",document.body.appendChild(o),await v(o,e)});return}const r=t.cloneNode(!0);r.id="",await v(r,e)}async function v(e,t){e.style.display="flex";const r=e.querySelector(".movie-popup-img");r.src=t.poster_path?`https://image.tmdb.org/t/p/original${t.poster_path}`:"",r.alt=t.title,e.querySelector(".movie-popup-title").textContent=t.title;const i=t.vote_average!=null?t.vote_average.toFixed(1):"-";e.querySelector(".vote-avg").textContent=i,e.querySelector(".vote-count").textContent=t.vote_count??"-";const n=t.popularity!=null?t.popularity.toFixed(1):"-";e.querySelector(".popularity-value").textContent=n;let o="-";if(t.genre_names&&Array.isArray(t.genre_names))o=t.genre_names.join(", ");else if(t.genre_ids&&Array.isArray(t.genre_ids)){const u=await k();o=t.genre_ids.map(c=>u[c]||c).join(", ")}e.querySelector(".genre-value").textContent=o,e.querySelector(".about-value").textContent=t.overview||"No description.";const a=e.querySelector(".movie-popup-add-btn");a&&(M(t,a),a.addEventListener("click",function(){q(t,this)}));const l=e.querySelector(".movie-popup-close");l.addEventListener("mouseenter",()=>{l.querySelector("img").src="../img/svg/close-hover.svg"}),l.addEventListener("mouseleave",()=>{l.querySelector("img").src="../img/svg/close.svg"}),l.addEventListener("click",()=>e.remove()),e.addEventListener("mousedown",function(u){u.target===e&&e.remove()}),document.body.appendChild(e)}console.log("catalog.js yüklendi!");const b=document.getElementById("search-form"),d=document.getElementById("movie-list"),s=document.getElementById("no-results"),g=document.getElementById("year-select");function I(){d.addEventListener("click",e=>{const t=e.target.closest("li.movie-item");if(!t)return;const r=Array.from(d.children).indexOf(t),n=Array.from(d.children).map(o=>o._movieData).filter(Boolean)[r];n&&B(n)})}function w(e){if(d.innerHTML="",!e||e.length===0){s.style.display="block";return}s.style.display="none",e.slice(0,21).forEach(r=>{const i=document.createElement("li");i.classList.add("movie-item"),i.innerHTML=`
      <img src="https://image.tmdb.org/t/p/original${r.poster_path}" alt="${r.title}" />
      <h3>${r.title}</h3>
      <p>Yayın Tarihi: ${r.release_date||"Bilinmiyor"}</p>
    `,i._movieData=r,d.appendChild(i)})}function P(){const e=new Date().getFullYear();for(let t=e;t>=1900;t--){const r=document.createElement("option");r.value=t,r.textContent=t,g.appendChild(r)}}async function D(){if(console.log("initCatalog fonksiyonu çağrıldı!"),!b||!d||!s||!g){console.error("Catalog için gerekli DOM elemanları bulunamadı!");return}P();try{const[e,t,r,i]=await Promise.all([_(),S(),x(),C()]);console.log("API verileri geldi:",{popularData:e,dailyData:t,weeklyData:r,upcomingData:i});const n=[...e.results,...t.results,...r.results,...i.results];console.log("Birleştirilmiş film listesi:",n);const o=new Map;n.forEach(a=>{o.has(a.id)||o.set(a.id,a)}),console.log("Benzersiz filmler:",Array.from(o.values())),w(Array.from(o.values())),b.addEventListener("submit",async a=>{a.preventDefault();let l=document.getElementById("search-input").value.trim(),u=g.value;if(l)try{const c=await E(l);console.log("Arama sonuçları:",c);let p=c.results;u&&(p=p.filter(h=>h.release_date&&h.release_date.startsWith(u))),w(p),p.length===0&&(s.style.display="block",s.textContent="Aradığınız kriterlere uygun film bulunamadı.")}catch(c){console.error("Film arama hatası:",c),s.style.display="block",s.textContent="Film bulunamadı veya bir hata oluştu."}})}catch(e){console.error("Filmler yüklenirken hata:",e),s.style.display="block",s.textContent="Filmler yüklenirken hata oluştu."}}D();I();export{D as i};
//# sourceMappingURL=catalog-CnTORDe9.js.map
