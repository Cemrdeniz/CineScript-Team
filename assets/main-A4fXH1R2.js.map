{"version":3,"mappings":"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","names":["API_KEY","BASE_URL","fetchDailyTrending","fetchWeeklyTrending","fetchMovieDetails","movieId","fetchMovieVideos","searchMovies","query","year","fetchGenres","deleteMoviePopup","movie","genreMap","template","isLocal","repoName","popupPath","res","html","tempDiv","popupOverlay","showPopupFromTemplate","error","img","genreText","g","id","removeBtn","library","deleteMoviePopupClose","closeBtn","basePath","e","popup","libraryfilmList","libraryplaceholder","librarygenreDropdown","librarygenreDisplay","librarygenreOptions","loadMoreBtn","loadingIndicator","allMovies","currentIndex","itemsPerPage","showGenreDropdown","hideGenreDropdown","loadGenres","data","fetchGenresApi","loadLibrary","showLoading","filmIds","hideLoading","genreIdSet","gid","populateGenres","renderMovies","updateLoadMoreButton","genreIdsToShow","selectedGenreId","allGenres","genreResetLi","filterFilmsByGenre","genre","li","genreId","genreIdNum","genreIds","nextIndex","card","createMovieCard","imgSrc","releaseYear","rating","genreNames","stars","getStarIcons","ICON_PATHS","vote","fullStars","halfStar","emptyStars","goHomeBtn","setHeroBackground","heroElement","results","backdropPath","imageUrl","LANGUAGE","currentPage","cachedUpcoming","round","value","isInLibrary","toggleLibrary","btn","lib","m","iziToast","fetchUpcomingMovies","page","now","month","lastDay","start","end","axios","buildHTML","releaseDate","renderUpcoming","section","genresData","genresMap","index","candidate","f","modal","backdrop","iframe","openTrailerModal","youtubeKey","closeTrailerModal","currentMovieId","setupHeroEvents","titleEl","overviewEl","trailerBtn","detailsBtn","heroSection","renderRandomHeroMovie","movies","randomMovie","bgUrl","handleTrailerClick","trailer","v","initFooterModal","openBtn","modalOverlay","track","prevBtn","nextBtn","slides","updateSlider","offset","openModal","closeModal","loadPartials","loads","el","src","wrapper","err","initCatalog","__vitePreload"],"ignoreList":[],"sources":["../../src/api/tmdbApi.js","../../src/js/library-popup.js","../../src/js/library.js","../../src/js/library-hero.js","../../src/js/upcoming.js","../../src/js/modal-trailer.js","../../src/js/catalog-hero.js","../../src/js/footer.js","../../src/main.js"],"sourcesContent":["export const API_KEY = '2609725f661288e9b08bc0d62455b671';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n\n// Tüm filmler\nexport async function fetchPopularMovies(page = 1) {\n  const res = await fetch(\n    `${BASE_URL}/movie/popular?api_key=${API_KEY}&page=${page}`\n  );\n  return await res.json();\n}\n\n// Günlük trend filmler\nexport async function fetchDailyTrending() {\n  const res = await fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n  return await res.json();\n}\n\n// Haftalık trend filmler\nexport async function fetchWeeklyTrending() {\n  const res = await fetch(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n  return await res.json();\n}\n\n// Yeni filmler (upcoming)\nexport async function fetchUpcomingMovies() {\n  const res = await fetch(`${BASE_URL}/movie/upcoming?api_key=${API_KEY}`);\n  return await res.json();\n}\n\n// Film detayları (tek bir film)\nexport async function fetchMovieDetails(movieId) {\n  const res = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n  return await res.json();\n}\n\n// Filmin videoları (fragman dahil)\nexport async function fetchMovieVideos(movieId) {\n  const res = await fetch(\n    `${BASE_URL}/movie/${movieId}/videos?api_key=${API_KEY}`\n  );\n  return await res.json();\n}\n\n// Anahtar kelime + yıla göre arama\nexport async function searchMovies(query, year = '') {\n  const res = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(\n      query\n    )}&year=${year}`\n  );\n  return await res.json();\n}\n\n// Tür listesini getirme\nexport async function fetchGenres() {\n  const res = await axios.get(`${BASE_URL}/genre/movie/list`, {\n    params: { api_key: API_KEY, language: LANGUAGE },\n  });\n  return res.data;\n}\n","import { fetchGenres } from \"../api/tmdbApi.js\";\n\n// ------------------------------\n// 1. Popup'u gösterme fonksiyonu\n// ------------------------------\nexport async function deleteMoviePopup(movie, genreMap) {\n  // Daha önce yüklenmiş popup template'ini seç\n  let template = document.querySelector('#popup-template');\n\n  // Eğer template yoksa, popup HTML dosyasını fetch et ve ekle\n  if (!template) {\n    const isLocal = window.location.hostname === 'localhost';\n    const repoName = isLocal ? '' : window.location.pathname.split('/')[1];\n    const popupPath = isLocal ? '/library-popup.html' : `/${repoName}/library-popup.html`;\n\n    try {\n      const res = await fetch(popupPath);\n      if (!res.ok) {\n        console.error(`Popup.html yüklenemedi. Durum: ${res.status}, URL: ${res.url}`);\n        return;\n      }\n\n      const html = await res.text();\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = html;\n      const popupOverlay = tempDiv.querySelector('.movie-popup-overlay');\n      if (!popupOverlay) {\n        console.error(\"movie-popup-overlay bulunamadı.\");\n        return;\n      }\n\n      // Template olarak body'ye ekle ve göster\n      popupOverlay.id = 'popup-template';\n      document.body.appendChild(popupOverlay);\n      await showPopupFromTemplate(popupOverlay, movie, genreMap);\n\n    } catch (error) {\n      console.error(\"Popup yüklenirken bir hata oluştu:\", error);\n    }\n\n    return;\n  }\n\n  // Template varsa klonla ve göster\n  const popupOverlay = template.cloneNode(true);\n  popupOverlay.id = '';\n  await showPopupFromTemplate(popupOverlay, movie, genreMap);\n}\n\n// --------------------------------------------\n// 2. Popup içeriğini doldurma ve event ekleme\n// --------------------------------------------\nasync function showPopupFromTemplate(popupOverlay, movie, genreMap) {\n  // Popup görünür yap\n  popupOverlay.style.display = 'flex';\n\n  // Poster ayarla\n  const img = popupOverlay.querySelector('.movie-popup-img');\n  img.src = movie.poster_path ? `https://image.tmdb.org/t/p/original${movie.poster_path}` : '';\n  img.alt = movie.title;\n\n  // Film başlığı, oylar ve popülerlik\n  popupOverlay.querySelector('.movie-popup-title').textContent = movie.title;\n  popupOverlay.querySelector('.vote-avg').textContent = movie.vote_average?.toFixed(1) ?? '-';\n  popupOverlay.querySelector('.vote-count').textContent = movie.vote_count ?? '-';\n  popupOverlay.querySelector('.popularity-value').textContent = movie.popularity?.toFixed(1) ?? '-';\n\n  // Tür bilgisi oluşturma\n  let genreText = '-';\n  if (movie.genre_names?.length) {\n    genreText = movie.genre_names.join(', ');\n  } else if (movie.genres?.length) {\n    genreText = movie.genres.map(g => g.name).join(', ');\n  } else if (movie.genre_ids?.length) {\n    genreText = movie.genre_ids.map(id => genreMap[id] || id).join(', ');\n  }\n  popupOverlay.querySelector('.genre-value').textContent = genreText;\n\n  \n  popupOverlay.querySelector('.about-value').textContent = movie.overview || 'No description.';\n\n  // --------------------------\n  // Remove butonuna işlev ekle\n  // --------------------------\n  const removeBtn = popupOverlay.querySelector('.movie-popup-add-btn.removed');\n  if (removeBtn) {\n    removeBtn.style.display = 'inline-block';\n\n    removeBtn.onclick = () => {\n      // LocalStorage'daki kütüphaneden filmi kaldır\n      let library = JSON.parse(localStorage.getItem('library')) || [];\n      library = library.filter(id => id !== movie.id);\n      localStorage.setItem('library', JSON.stringify(library));\n\n      // Popup'u kapat ve sayfayı yenile (isteğe bağlı)\n      deleteMoviePopupClose();\n      window.location.reload();\n    };\n  }\n\n  // -----------------------------------------\n  // Kapatma butonuna hover efektleri ve olaylar\n  // -----------------------------------------\n  const closeBtn = popupOverlay.querySelector('.movie-popup-close');\n  const isLocal = window.location.hostname === 'localhost';\n  const repoName = isLocal ? '' : window.location.pathname.split('/')[1];\n  const basePath = isLocal ? '' : `/${repoName}`;\n\n  closeBtn.addEventListener('mouseenter', () => {\n    closeBtn.querySelector('img').src = `${basePath}/img/svg/close-hover.svg`;\n  });\n\n  closeBtn.addEventListener('mouseleave', () => {\n    closeBtn.querySelector('img').src = `${basePath}/img/svg/close.svg`;\n  });\n\n  closeBtn.addEventListener('click', () => deleteMoviePopupClose());\n\n  // Popup arka planına tıklayınca kapat\n  popupOverlay.addEventListener('mousedown', (e) => {\n    if (e.target === popupOverlay) {\n      deleteMoviePopupClose();\n    }\n  });\n\n  // Popup'u DOM'a ekle\n  document.body.appendChild(popupOverlay);\n}\n\n// -----------------------------\n// 3. Popup kapatma fonksiyonu\n// -----------------------------\nexport function deleteMoviePopupClose() {\n  const popup = document.querySelector('.movie-popup-overlay') || document.querySelector('#popup-template');\n  if (popup) popup.remove();\n}\n","import { fetchMovieDetails, fetchGenres as fetchGenresApi } from '../api/tmdbApi.js';\nimport { deleteMoviePopup } from './library-popup.js';\n\n// ----------------------------\n// 1. DOM ELEMENTLERİNİN SEÇİMİ\n// ----------------------------\nconst libraryfilmList = document.getElementById('library-film-list');\nconst libraryplaceholder = document.getElementById('library-placeholder');\nconst librarygenreDropdown = document.querySelector('.library-custom-select');\nconst librarygenreDisplay = document.querySelector('.library-selected-option');\nconst librarygenreOptions = document.querySelector('.library-genre-options');\nconst loadMoreBtn = document.getElementById('load-more-btn');\nconst loadingIndicator = document.getElementById('library-loading');\n\nlet genreMap = null;\nlet allMovies = [];\nlet currentIndex = 0;\nconst itemsPerPage = 9;\n\n// ----------------------------\n// Yardımcı Fonksiyonlar\n// ----------------------------\nfunction showGenreDropdown() {\n  librarygenreDropdown.style.visibility = 'visible';\n}\n\nfunction hideGenreDropdown() {\n  librarygenreDropdown.style.visibility = 'hidden';\n}\n\n// -------------------------\n// 2. TÜRLERİ YÜKLEME FONKSİYONU\n// -------------------------\nasync function loadGenres() {\n  if (genreMap) return genreMap;\n  const data = await fetchGenresApi();\n  genreMap = {};\n  if (data.genres && Array.isArray(data.genres)) {\n    data.genres.forEach(g => {\n      genreMap[g.id] = g.name;\n    });\n  }\n  return genreMap;\n}\n\n// ---------------------------\n// 3. KÜTÜPHANE FİLMLERİNİ YÜKLEME\n// ---------------------------\nasync function loadLibrary() {\n  showLoading();\n  hideGenreDropdown();\n  librarygenreOptions.classList.add('hidden');\n\n  const filmIds = JSON.parse(localStorage.getItem('library')) || [];\n\n  if (filmIds.length === 0) {\n    libraryplaceholder.style.display = 'flex';\n    libraryfilmList.innerHTML = '';\n    hideLoading();\n    return;\n  }\n\n  libraryplaceholder.style.display = 'none';\n  libraryfilmList.innerHTML = '';\n\n  genreMap = await loadGenres();\n  allMovies = [];\n  const genreIdSet = new Set();\n\n  for (const id of filmIds) {\n    try {\n      const movie = await fetchMovieDetails(id);\n      allMovies.push(movie);\n\n      if (movie.genres?.length) {\n        movie.genres.forEach(g => genreIdSet.add(g.id));\n      } else if (movie.genre_ids?.length) {\n        movie.genre_ids.forEach(gid => genreIdSet.add(gid));\n      }\n    } catch (error) {\n      console.error(`Film ${id} getirilemedi`, error);\n    }\n  }\n\n  await populateGenres([...genreIdSet], '');\n  currentIndex = 0;\n  renderMovies();\n  updateLoadMoreButton();\n  showGenreDropdown();\n  hideLoading();\n}\n\n// ---------------------------\n// 4. TÜRLERİ DROPDOWN'A YERLEŞTİRME\n// ---------------------------\nasync function populateGenres(genreIdsToShow, selectedGenreId = '') {\n  try {\n    const data = await fetchGenresApi();\n    const allGenres = data.genres;\n    librarygenreOptions.innerHTML = '';\n\n    if (selectedGenreId) {\n      const genreResetLi = document.createElement('li');\n      genreResetLi.textContent = 'Genre';\n      genreResetLi.dataset.id = '';\n      genreResetLi.addEventListener('click', () => {\n        librarygenreDisplay.childNodes[0].nodeValue = 'Genre';\n        librarygenreOptions.classList.add('hidden');\n        filterFilmsByGenre('');\n      });\n      librarygenreOptions.appendChild(genreResetLi);\n    }\n\n    allGenres.forEach(genre => {\n      if (genreIdsToShow.includes(genre.id) && genre.id !== Number(selectedGenreId)) {\n        const li = document.createElement('li');\n        li.textContent = genre.name;\n        li.dataset.id = genre.id;\n        li.addEventListener('click', () => {\n          librarygenreDisplay.childNodes[0].nodeValue = genre.name;\n          librarygenreOptions.classList.add('hidden');\n          filterFilmsByGenre(genre.id);\n        });\n        librarygenreOptions.appendChild(li);\n      }\n    });\n  } catch (error) {\n    console.error('Kategoriler alınamadı:', error);\n  }\n}\n\n// ---------------------------------------\n// 5. TÜRE GÖRE FİLMLERİ FİLTRELEME\n// ---------------------------------------\nasync function filterFilmsByGenre(genreId) {\n  showLoading();\n  hideGenreDropdown();\n  librarygenreOptions.classList.add('hidden');\n\n  const filmIds = JSON.parse(localStorage.getItem('library')) || [];\n\n  if (filmIds.length === 0) {\n    libraryplaceholder.style.display = 'flex';\n    libraryfilmList.innerHTML = '';\n    hideLoading();\n    return;\n  }\n\n  libraryplaceholder.style.display = 'none';\n  libraryfilmList.innerHTML = '';\n  allMovies = [];\n\n  const genreIdNum = Number(genreId);\n\n  for (const id of filmIds) {\n    try {\n      const movie = await fetchMovieDetails(id);\n      const genreIds = movie.genres?.map(g => g.id) || movie.genre_ids || [];\n\n      if (!genreId || genreIds.includes(genreIdNum)) {\n        allMovies.push(movie);\n      }\n    } catch (error) {\n      console.error(`Film ${id} getirilemedi`, error);\n    }\n  }\n\n  currentIndex = 0;\n  renderMovies();\n  updateLoadMoreButton();\n\n  if (allMovies.length === 0) {\n    libraryplaceholder.style.display = 'flex';\n  }\n\n  const genreIdSet = new Set();\n  allMovies.forEach(movie => {\n    if (movie.genres?.length) {\n      movie.genres.forEach(g => genreIdSet.add(g.id));\n    } else if (movie.genre_ids?.length) {\n      movie.genre_ids.forEach(gid => genreIdSet.add(gid));\n    }\n  });\n\n  await populateGenres([...genreIdSet], genreIdNum);\n  showGenreDropdown();\n  hideLoading();\n}\n\n// --------------------------\n// 6. SAYFALAYARAK FİLM GÖSTERME\n// --------------------------\nfunction renderMovies() {\n  const nextIndex = currentIndex + itemsPerPage;\n  const moviesToShow = allMovies.slice(currentIndex, nextIndex);\n\n  moviesToShow.forEach(movie => {\n    const card = createMovieCard(movie, genreMap);\n    libraryfilmList.appendChild(card);\n  });\n\n  currentIndex = nextIndex;\n}\n\nfunction updateLoadMoreButton() {\n  if (!loadMoreBtn) return;\n  loadMoreBtn.style.display = currentIndex >= allMovies.length ? 'none' : 'block';\n}\n\n// --------------------------\n// 7. FİLM KARTI OLUŞTURMA\n// --------------------------\nfunction createMovieCard(movie, genreMap) {\n  const li = document.createElement('li');\n  li.classList.add('library-item');\n\n  const imgSrc = movie.poster_path\n    ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n    : 'https://via.placeholder.com/300x450?text=No+Image';\n\n  const releaseYear = movie.release_date?.split('-')[0] || 'Bilinmiyor';\n  const rating = movie.vote_average || 0;\n  const genreNames = movie.genres?.map(g => g.name).join(', ') || 'Tür bilinmiyor';\n\n  const stars = getStarIcons(rating);\n\n  li.innerHTML = `\n    <img src=\"${imgSrc}\" alt=\"${movie.title}\" class=\"library-film-poster\" />\n    <div class=\"library-overlay\">\n      <h3 class=\"library-film-title\">${movie.title}</h3>\n      <div class=\"library-bottom-row\">\n        <p class=\"library-film-info\">${genreNames} | ${releaseYear}</p>\n        <div class=\"library-stars\">${stars}</div>\n      </div>\n    </div>\n  `;\n\n  li.addEventListener('click', () => {\n    deleteMoviePopup(movie, genreMap);\n  });\n\n  return li;\n}\n\n// --------------------\n// 8. YILDIZLAR\n// --------------------\nconst ICON_PATHS = {\n  full: './img/svg/star.svg',\n  half: './img/svg/star-half.svg',\n  empty: './img/svg/star-outline.svg',\n};\n\nfunction getStarIcons(vote) {\n  const fullStars = Math.floor(vote / 2);\n  const halfStar = vote % 2 >= 1 ? 1 : 0;\n  const emptyStars = 5 - fullStars - halfStar;\n\n  return (\n    `<img class=\"star-icon full\" src=\"${ICON_PATHS.full}\" alt=\"star\" />`.repeat(fullStars) +\n    `<img class=\"star-icon half\" src=\"${ICON_PATHS.half}\" alt=\"half star\" />`.repeat(halfStar) +\n    `<img class=\"star-icon empty\" src=\"${ICON_PATHS.empty}\" alt=\"empty star\" />`.repeat(emptyStars)\n  );\n}\n\n// -----------------------------\n// 9. LOADING YARDIMCILARI\n// -----------------------------\nfunction showLoading() {\n  if (loadingIndicator) loadingIndicator.style.display = 'block';\n}\n\nfunction hideLoading() {\n  if (loadingIndicator) loadingIndicator.style.display = 'none';\n}\n\n// -----------------------------\n// 10. DOM YÜKLENDİĞİNDE\n// -----------------------------\ndocument.addEventListener('DOMContentLoaded', () => {\n  librarygenreDisplay.childNodes[0].nodeValue = 'Genre';\n  loadLibrary();\n\n  const goHomeBtn = document.getElementById('go-to-catalog');\n  if (goHomeBtn) {\n    goHomeBtn.addEventListener('click', () => {\n      window.location.href = 'catalog.html';\n    });\n  }\n\n  librarygenreDisplay.addEventListener('click', () => {\n    librarygenreOptions.classList.toggle('hidden');\n  });\n\n  loadMoreBtn.addEventListener('click', () => {\n    renderMovies();\n    updateLoadMoreButton();\n  });\n\n  document.addEventListener('click', e => {\n    if (!e.target.closest('.library-custom-select')) {\n      librarygenreOptions.classList.add('hidden');\n    }\n  });\n});","import { fetchDailyTrending } from '../api/tmdbApi.js';\n\nasync function setHeroBackground() {\n  const heroElement = document.querySelector('.library-hero-bg');\n  if (!heroElement) return;\n\n  try {\n    const data = await fetchDailyTrending();\n    const results = data?.results;\n\n    if (!results || results.length === 0) return;\n\n    // Rastgele bir film seç\n    const randomMovie = results[Math.floor(Math.random() * results.length)];\n    const backdropPath = randomMovie?.backdrop_path;\n\n    if (backdropPath) {\n      const imageUrl = `https://image.tmdb.org/t/p/w1920${backdropPath}`;\n      heroElement.style.backgroundImage = `url('${imageUrl}')`;\n      heroElement.style.backgroundSize = 'cover';\n      heroElement.style.backgroundPosition = 'center';\n    }\n  } catch (error) {\n    console.error('Hero görseli yüklenemedi:', error);\n    // CSS fallback devrede kalır\n  }\n}\n\nsetHeroBackground();\n\n","import axios from 'axios';\nimport iziToast from 'izitoast';\nimport { API_KEY, BASE_URL } from '../api/tmdbApi';\n\nconst LANGUAGE = 'en-US'; // Artık burada\n\nlet currentPage = 1;\nlet cachedUpcoming = [];\n\nfunction round(value) {\n  return Math.round(value * 10) / 10;\n}\n\nfunction isInLibrary(id) {\n  const lib = JSON.parse(localStorage.getItem('myLibrary')) || [];\n  return lib.some(movie => movie.id === id);\n}\n\nfunction toggleLibrary(movie, btn) {\n  let lib = JSON.parse(localStorage.getItem('myLibrary')) || [];\n  const exists = lib.find(m => m.id === movie.id);\n\n  if (exists) {\n    lib = lib.filter(m => m.id !== movie.id);\n    btn.textContent = 'Add to my library';\n    iziToast.info({ message: 'Removed from My Library', position: 'topRight' });\n  } else {\n    lib.push(movie);\n    btn.textContent = 'Remove from my library';\n    iziToast.success({ message: 'Added to My Library', position: 'topRight' });\n  }\n\n  localStorage.setItem('myLibrary', JSON.stringify(lib));\n}\n\nasync function fetchUpcomingMovies(page = 1) {\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = String(now.getMonth() + 1).padStart(2, '0');\n  const lastDay = new Date(year, now.getMonth() + 1, 0).getDate();\n  const start = `${year}-${month}-01`;\n  const end = `${year}-${month}-${lastDay}`;\n\n  const res = await axios.get(`${BASE_URL}/discover/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: LANGUAGE,\n      sort_by: 'popularity.desc',\n      primary_release_date_gte: start,\n      primary_release_date_lte: end,\n      page,\n    },\n  });\n\n  return res.data;\n}\n\nasync function fetchGenres() {\n  const res = await axios.get(`${BASE_URL}/genre/movie/list`, {\n    params: { api_key: API_KEY, language: LANGUAGE },\n  });\n  return res.data;\n}\n\nfunction buildHTML(movie, genreNames) {\n  const releaseDate = new Date(movie.release_date).toLocaleDateString('en-GB');\n\n  return `\n    <div class=\"container\">\n      <h3 class=\"upcoming-header\">Upcoming this month</h3>\n      <div class=\"upcoming-body\">\n        <img\n          class=\"upcoming-img\"\n          src=\"https://image.tmdb.org/t/p/original${movie.backdrop_path}\"\n          alt=\"${movie.title}\"\n        />\n        <div class=\"upcoming-content\">\n          <h2 class=\"upcoming-content-header\">${movie.title}</h2>\n          <div class=\"result\">\n            <div class=\"result-left\">\n              <div>\n                <span>Release date</span>\n                <span class=\"date\">${releaseDate}</span>\n              </div>\n              <div>\n                <span>Vote / Votes</span>\n                <span class=\"vote\">\n                  <span class=\"vote-average\">${round(\n                    movie.vote_average\n                  )}</span> /\n                  <span class=\"vote-count\">${movie.vote_count}</span>\n                </span>\n              </div>\n            </div>\n            <div class=\"result-right\">\n              <div>\n                <span>Popularity</span>\n                <span class=\"popularity\">${round(movie.popularity)}</span>\n              </div>\n              <div>\n                <span>Genre</span>\n                <span class=\"genre\">${genreNames}</span>\n              </div>\n            </div>\n          </div>\n          <h3 class=\"upcoming-about-header\">About</h3>\n          <p class=\"upcoming-about\">${movie.overview}</p>\n          <button class=\"btn-primary\" id=\"library-btn\">Add to my library</button>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\nexport async function renderUpcoming() {\n  console.log('🚀 renderUpcoming çağrıldı');\n  const section = document.getElementById('upcoming');\n\n  try {\n    if (cachedUpcoming.length === 0) {\n      const data = await fetchUpcomingMovies(currentPage++);\n      cachedUpcoming = data.results.filter(m => m.backdrop_path && m.overview);\n    }\n\n    const genresData = await fetchGenres();\n    const genresMap = {};\n    genresData.genres.forEach(g => (genresMap[g.id] = g.name));\n\n    const library = JSON.parse(localStorage.getItem('myLibrary')) || [];\n\n    let movie;\n    while (cachedUpcoming.length > 0) {\n      const index = Math.floor(Math.random() * cachedUpcoming.length);\n      const candidate = cachedUpcoming.splice(index, 1)[0];\n\n      if (!library.some(f => f.id === candidate.id)) {\n        movie = candidate;\n        break;\n      }\n    }\n\n    if (!movie) {\n      section.innerHTML = `<p style=\"text-align:center\">No more upcoming movies available.</p>`;\n      iziToast.warning({\n        message: 'No more unique movies to show.',\n        position: 'topRight',\n      });\n      return;\n    }\n\n    const genreNames = movie.genre_ids\n      .map(id => genresMap[id])\n      .filter(Boolean)\n      .join(', ');\n\n    section.innerHTML = buildHTML(movie, genreNames);\n\n    const btn = section.querySelector('#library-btn');\n    if (isInLibrary(movie.id)) btn.textContent = 'Remove from my library';\n\n    btn.addEventListener('click', () => toggleLibrary(movie, btn));\n  } catch (error) {\n    console.error('Error loading upcoming movie:', error);\n    iziToast.error({\n      message: 'Failed to load upcoming movie',\n      position: 'topRight',\n    });\n  }\n}\n","const modal = document.createElement('div');\nmodal.classList.add('trailer-modal', 'is-hidden');\n\nmodal.innerHTML = `\n  <div class=\"trailer-modal-backdrop\">\n    <div class=\"trailer-modal-content\">\n      <button class=\"trailer-modal-close\">&times;</button>\n      <iframe\n        id=\"trailer-video\"\n        width=\"100%\"\n        height=\"100%\"\n        frameborder=\"0\"\n        allowfullscreen\n        allow=\"autoplay; encrypted-media\"\n      ></iframe>\n    </div>\n  </div>\n`;\n\ndocument.body.appendChild(modal);\n\nconst closeBtn = modal.querySelector('.trailer-modal-close');\nconst backdrop = modal.querySelector('.trailer-modal-backdrop');\nconst iframe = modal.querySelector('#trailer-video');\n\nexport function openTrailerModal(youtubeKey) {\n  iframe.src = `https://www.youtube.com/embed/${youtubeKey}?autoplay=1`;\n  modal.classList.remove('is-hidden');\n}\n\nfunction closeTrailerModal() {\n  modal.classList.add('is-hidden');\n  iframe.src = '';\n}\n\ncloseBtn.addEventListener('click', closeTrailerModal);\nbackdrop.addEventListener('click', e => {\n  if (e.target === backdrop) {\n    closeTrailerModal();\n  }\n});\ndocument.addEventListener('keydown', e => {\n  if (e.key === 'Escape' && !modal.classList.contains('is-hidden')) {\n    closeTrailerModal();\n  }\n});\n","import { fetchDailyTrending, fetchMovieVideos } from '../api/tmdbApi.js';\nimport { openTrailerModal } from './modal-trailer.js';\n\nlet currentMovieId = null;\n\nfunction setupHeroEvents() {\n  const titleEl = document.querySelector('.catalog-hero-title');\n  const overviewEl = document.querySelector('.catalog-hero-overview');\n  const trailerBtn = document.querySelector('.catalog-hero-btn.trailer');\n  const detailsBtn = document.querySelector('.catalog-hero-btn.details');\n  const heroSection = document.querySelector('.catalog-hero');\n\n  // DOM'da gerekli öğeler yoksa işlemi durdur\n  if (!heroSection || !titleEl || !overviewEl) {\n    console.warn('Catalog Hero için gerekli DOM öğeleri bulunamadı.');\n    return;\n  }\n\n  async function renderRandomHeroMovie() {\n    try {\n      const data = await fetchDailyTrending();\n      const movies = data.results;\n\n      const randomMovie = movies[Math.floor(Math.random() * movies.length)];\n      currentMovieId = randomMovie.id;\n    const posterPath = randomMovie.backdrop_path || randomMovie.poster_path;\n    const bgUrl = `https://image.tmdb.org/t/p/original${posterPath}`;\n\n      heroSection.style.backgroundImage = `url(${bgUrl})`;\n\n      titleEl.textContent = randomMovie.title || randomMovie.name || 'Untitled';\n      overviewEl.textContent =\n        randomMovie.overview || 'No description available';\n    } catch (error) {\n      console.error('Error loading hero section:', error);\n    }\n  }\n\n  async function handleTrailerClick() {\n    if (!currentMovieId) return;\n\n    try {\n      const data = await fetchMovieVideos(currentMovieId);\n      const videos = data.results;\n\n      const trailer = videos.find(\n        v => v.type === 'Trailer' && v.site === 'YouTube'\n      );\n\n      if (trailer) {\n        openTrailerModal(trailer.key);\n      } else {\n        alert('No trailer available.');\n      }\n    } catch (error) {\n      console.error('Trailer error:', error);\n    }\n  }\n\n  // Event listener'ları güvenli şekilde bağla\n  if (trailerBtn) {\n    trailerBtn.addEventListener('click', handleTrailerClick);\n  }\n\n  if (detailsBtn) {\n    detailsBtn.addEventListener('click', () => {\n      alert('More details tıklanıldı!');\n    });\n  }\n\n  // İlk film yüklemesini yap\n  renderRandomHeroMovie();\n}\n\n// main.js içinden çağırmak için export et\nexport { setupHeroEvents };\n","export function initFooterModal() {\n  const openBtn = document.querySelector('#open-team-modal');\n  const modalOverlay = document.querySelector('.modal-overlay');\n  const closeBtn = document.querySelector('.modal-close');\n  const track = document.querySelector('.slider-track');\n  const prevBtn = document.querySelector('.slider-btn.prev');\n  const nextBtn = document.querySelector('.slider-btn.next');\n  const slides = document.querySelectorAll('.team-card');\n\n  if (!openBtn || !modalOverlay || !closeBtn) {\n    console.warn('Footer modal için gerekli öğeler bulunamadı.');\n    return;\n  }\n\n  let currentIndex = 0;\n\n  function updateSlider() {\n    const offset = -currentIndex * 100;\n    if (track) {\n      track.style.transform = `translateX(${offset}%)`;\n    }\n  }\n\n  function openModal() {\n    modalOverlay.classList.add('active');\n    closeBtn.focus();\n    document.body.style.overflow = 'hidden';\n    updateSlider();\n  }\n\n  function closeModal() {\n    modalOverlay.classList.remove('active');\n    openBtn.focus();\n    document.body.style.overflow = '';\n  }\n\n  openBtn.addEventListener('click', e => {\n    e.preventDefault();\n    openModal();\n  });\n\n  closeBtn.addEventListener('click', closeModal);\n\n  window.addEventListener('click', e => {\n    if (e.target === modalOverlay) closeModal();\n  });\n\n  document.addEventListener('keydown', e => {\n    if (e.key === 'Escape') closeModal();\n  });\n\n  if (prevBtn && nextBtn && slides.length > 0) {\n    prevBtn.addEventListener('click', () => {\n      currentIndex = (currentIndex - 1 + slides.length) % slides.length;\n      updateSlider();\n    });\n\n    nextBtn.addEventListener('click', () => {\n      currentIndex = (currentIndex + 1) % slides.length;\n      updateSlider();\n    });\n  }\n}\n","// Stil ve bağımlılıkları\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Sayfa bölümleri\nimport { renderUpcoming } from './js/upcoming.js';\nimport { setupHeroEvents } from './js/catalog-hero.js';\nimport './js/library.js'; // sadece çalıştırmak için import ediliyor\n\n// Global işlevsellik\nimport './js/header.js';\nimport { initFooterModal } from './js/footer.js';\nimport './js/hero.js';\nimport './js/library-hero.js';\nimport './js/trends.js';\nimport './js/loader.js';\nimport './js/scroll-up.js';\n\n// 🔄 HTML <load src=\"...\"> etiketlerini parçalarla değiştir\nimport './api/tmdbApi.js';\nimport 'izitoast/dist/css/iziToast.min.css';\ndocument.addEventListener('DOMContentLoaded', () => {\n  const upcomingSection = document.getElementById('upcoming');\n  if (upcomingSection) {\n    renderUpcoming();\n  }\n});\nimport { initCatalog } from './js/catalog.js';\nimport { createMoviePopup } from './js/popup.js';\nimport { showLoader, hideLoader } from './js/loader.js';\n\nimport './js/library.js';\nasync function loadPartials() {\n  const loads = document.querySelectorAll('load');\n\n  for (const el of loads) {\n    const src = el.getAttribute('src');\n    if (src) {\n      try {\n        const res = await fetch(src);\n        if (res.ok) {\n          const html = await res.text();\n          const wrapper = document.createElement('div');\n          wrapper.innerHTML = html;\n          el.replaceWith(wrapper);\n        } else {\n          console.error('Partial yüklenemedi:', src);\n        }\n      } catch (err) {\n        console.error('Yükleme hatası:', err);\n      }\n    }\n  }\n}\n\n// ✅ Partial'lar yüklendikten sonra her bölümü başlat\nloadPartials().then(async () => {\n  try {\n    // CATALOG HERO bölümü varsa başlat\n    const heroSection = document.querySelector('.catalog-hero');\n    if (heroSection) {\n      setupHeroEvents();\n    }\n\n    // CATALOG bölümü varsa modülü dinamik olarak içe aktar ve başlat\n    const catalogSection = document.getElementById('catalog');\n    if (catalogSection) {\n      const { initCatalog } = await import('./js/catalog.js');\n      if (typeof initCatalog === 'function') {\n        initCatalog();\n      }\n    }\n\n    // UPCOMING bölümü varsa başlat\n    const upcomingSection = document.getElementById('upcoming');\n    if (upcomingSection) {\n      renderUpcoming();\n    }\n\n    // FOOTER varsa modal'ı başlat\n    const footerEl = document.getElementById('footer');\n    if (footerEl) {\n      initFooterModal();\n    }\n  } catch (error) {\n    console.error('Bölümler başlatılırken hata oluştu:', error);\n  }\n});\n"],"file":"assets/main-A4fXH1R2.js"}